								# R-Scripts

##### DB-Scan

# Loading libraries
library(dbscan)
library(MCL)
library(ggplot2)
library(dplyr)

# Identification of DB-Scan parameters

c2<-brewer.pal(9,"Paired")

ydbscan <- kNNdist(umap_M2, k=round(log(nrow(umap_M2))))
epsR <- as.data.frame(table(round(ydbscan)), stringsAsFactors = F)
epsR$delta <- rep(NA, nrow(epsR))
for (i in 2:(nrow(epsR))) {
  epsR[i,3] <-   epsR[(i-1),2] - epsR[(i),2] 
}
cl.dbscan <- dbscan(umap_M2[,c(1,2)],
                    minPts = round(log(nrow(umap_M2))), 
                    eps = as.numeric(epsR[which(epsR$delta==max(epsR$delta, na.rm = T)),1])
)

# Analysis of Clusters 
# Example with cluster number 1

n_cl<-length(unique(cl.dbscan$cluster))
unique(cl.dbscan$cluster)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = sample(unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals))),74,FALSE)
COL<-col_vector[cl.dbscan$cluster]
par(mfrow=c(1,1))
plot(umap_M2[,1],umap_M2[,2],col=COL,pch=16)
plot(1:n_cl,rep(10,n_cl),col=col_vector[1:n_cl],pch=16,cex=1.3)


clus1<-d1[which(cl.dbscan$cluster=="1"),]
clus1<-as.data.frame(clus1)
barplot(colSums(clus1)/length(rowSums(clus1)),las=2,main = "Umap_Cluster 1")
u_clus1<-as.data.frame(distinct(clus1))
f_u_clus1<-apply(clus1,1,function(f_u_clus1) paste(f_u_clus1,collapse = " "))
t1<-table(f_u_clus1)
barplot(table(f_u_clus1)/length(rowSums(clus1)),las=2,ylim=c(0,1))

clus1_11<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2011"),]
clus1_12<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2012"),]
clus1_13<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2013"),]
clus1_14<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2014"),]
clus1_15<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2015"),]
clus1_16<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2016"),]
clus1_17<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2017"),]
clus1_18<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2018"),]
clus1_19<-d1[which(cl.dbscan$cluster=="1" & d$Year=="2019"),]

n1<-(c(10,68,73,86,55,82,62,88,25)/v)*100 # number of cluster1 isolates per year
plot(years,n1,type="l",col="red",ylim=c(0,15),las=2,ylab = "% Resistant",xlab="Years",main="Cluster1_TemporalTrend")
grid()
abline(h=mean(n1),col="blue")


# Antibiotic temporal trend analysis
# Penicillin as example

dt1<-d[which(d$Year==2011),]#136
dt2<-d[which(d$Year==2012),]#793
dt3<-d[which(d$Year==2013),]#763
dt4<-d[which(d$Year==2014),]#837
dt5<-d[which(d$Year==2015),]#958
dt6<-d[which(d$Year==2016),]#987
dt7<-d[which(d$Year==2017),]#1018
dt8<-d[which(d$Year==2018),]#995
dt9<-d[which(d$Year==2019),]#300

years<-c("2011","2012","2013","2014","2015","2016","2017","2018","2019")
v<-c(136,793,763,837,958,987,1018,995,300)

PenicillinG<-d %>%
  group_by(Year)  %>%
  summarize(Resistance = sum(Penicillina.G))
PenicillinG$Resistance<-(PenicillinG$Resistance/v)*100
jpeg("PenicillinG_TemporalTrend")
m_PenicillinG<-mean(PenicillinG$Resistance)
plot(PenicillinG,las=2,type="l",main="PenicillinG",ylab="% Resistants")
abline(h=m_PenicillinG)
grid()
dev.off()

