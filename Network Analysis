								# R-Scripts

# Network analysis

# Loading libraryt

library("igraph")

# Import dataset
binary_mt<-read.csv("BinaryDataSet_Metadata.csv")
d_emo_sort<-dplyr::arrange(d_emo,PAT_ID,DATE)
binary_mt_sort<-dplyr::arrange(binary_mt,PAT_ID,DATE)

# Contingency matrix

clusnet<-matrix(0,nrow = length(unique(d_emo_sort$Cluster)),ncol=length(unique(d_emo_sort$Cluster)))
clusnet1<-matrix(0,nrow = length(unique(binary_mt_sort$Cluster)),ncol=length(unique(binary_mt_sort$Cluster)))
d_emo_sort$Cluster<-as.numeric(sub("Cluster","",d_emo_sort$Cluster))
binary_mt_sort$Cluster<-as.numeric(sub("Cluster","",binary_mt_sort$Cluster))

i <- 2
while ( i <= nrow(binary_mt_sort) ) {
  prev_row <- binary_mt_sort[i-1,]
  row <- binary_mt_sort[i, ]
  if (prev_row$PAT_ID == row$PAT_ID) {
    clusnet1[prev_row$Cluster,row$Cluster]<-clusnet1[prev_row$Cluster,row$Cluster]+1
    i
  }
  i<-i+1
}

# Network visualization

g<-graph_from_adjacency_matrix(clusnet,mode="directed",weighted = TRUE)
g1<-graph_from_adjacency_matrix(clusnet1,mode="directed",weighted = TRUE)
g
E(g)#edges
V(g)#nodes
E(g)$weight
#in questo modo lo spessore delle frecce dipende dal peso contato
tkplot(simplify(g),edge.width=E(g)$weight,vertex.color="orange",vertex.label.color="black")
tkplot(simplify(g1))


